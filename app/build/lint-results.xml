<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 22.6.2">

    <issue
        id="DuplicateIds"
        severity="Warning"
        message="Duplicate id @+id/linearLayout1, already defined earlier in this layout"
        category="Correctness"
        priority="7"
        summary="Checks for duplicate ids within a single layout"
        explanation="Within a layout, id&apos;s should be unique since otherwise `findViewById()` can return an unexpected view."
        errorLine1="        android:id=&quot;@+id/linearLayout1&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="50"
            column="9"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="42"
            column="9"/>
    </issue>

    <issue
        id="DuplicateIds"
        severity="Warning"
        message="Duplicate id @+id/linearLayout1, already defined earlier in this layout"
        category="Correctness"
        priority="7"
        summary="Checks for duplicate ids within a single layout"
        explanation="Within a layout, id&apos;s should be unique since otherwise `findViewById()` can return an unexpected view."
        errorLine1="        android:id=&quot;@+id/linearLayout1&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="50"
            column="9"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="42"
            column="9"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use toUpperCase(Locale) instead"
        category="Correctness"
        priority="6"
        summary="Finds calls to locale-ambiguous `String` manipulation methods"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     if (line.trim().toUpperCase().startsWith(CLOSE_NETWORK)) {"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\backupmanagement\ConfReader.java"
            line="71"
            column="22"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use toUpperCase(Locale) instead"
        category="Correctness"
        priority="6"
        summary="Finds calls to locale-ambiguous `String` manipulation methods"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` *without specifying an explicit locale* is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is *not* `I`.

If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     if (line.trim().toUpperCase().startsWith(CLOSE_NETWORK)) {"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\backupmanagement\ConfReader.java"
            line="71"
            column="22"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Warning"
        message="Do not hardcode &quot;/sdcard/&quot;; use Environment.getExternalStorageDirectory().getPath() instead"
        category="Correctness"
        priority="6"
        summary="Looks for hardcoded references to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.

Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        errorLine1="    public static final String BACKUP_PATH = &quot;/mnt/sdcard/WIFI_Backup_Restore&quot;;"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\backupmanagement\WIFIConfigurationManager.java"
            line="28"
            column="46"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Warning"
        message="Do not hardcode &quot;/sdcard/&quot;; use Environment.getExternalStorageDirectory().getPath() instead"
        category="Correctness"
        priority="6"
        summary="Looks for hardcoded references to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.

Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        errorLine1="    public static final String BACKUP_PATH = &quot;/mnt/sdcard/WIFI_Backup_Restore&quot;;"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\backupmanagement\WIFIConfigurationManager.java"
            line="28"
            column="46"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Expected duration Toast.LENGTH_SHORT or Toast.LENGTH_LONG, a custom duration value is not supported"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast1 = Toast.makeText(context, &quot;All config data logged to ReadConfigLog.txt&quot;, 3000);"
        errorLine2="                                                                                                          ~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="324"
            column="107"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Expected duration Toast.LENGTH_SHORT or Toast.LENGTH_LONG, a custom duration value is not supported"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast1 = Toast.makeText(context, &quot;All config data logged to ReadConfigLog.txt&quot;, 3000);"
        errorLine2="                                                                                                          ~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="324"
            column="107"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Toast created but not shown: did you forget to call show() ?"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast1 = Toast.makeText(context, &quot;All config data logged to ReadConfigLog.txt&quot;, 3000);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="324"
            column="36"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Toast created but not shown: did you forget to call show() ?"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast1 = Toast.makeText(context, &quot;All config data logged to ReadConfigLog.txt&quot;, 3000);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="324"
            column="36"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Expected duration Toast.LENGTH_SHORT or Toast.LENGTH_LONG, a custom duration value is not supported"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast2 = Toast.makeText(context, &quot;Extract ReadConfigLog.txt from SD CARD&quot;, 5000);"
        errorLine2="                                                                                                     ~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="325"
            column="102"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Expected duration Toast.LENGTH_SHORT or Toast.LENGTH_LONG, a custom duration value is not supported"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast2 = Toast.makeText(context, &quot;Extract ReadConfigLog.txt from SD CARD&quot;, 5000);"
        errorLine2="                                                                                                     ~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="325"
            column="102"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Toast created but not shown: did you forget to call show() ?"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast2 = Toast.makeText(context, &quot;Extract ReadConfigLog.txt from SD CARD&quot;, 5000);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="325"
            column="36"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Warning"
        message="Toast created but not shown: did you forget to call show() ?"
        category="Correctness"
        priority="6"
        summary="Looks for code creating a `Toast` but forgetting to call `show()` on it"
        explanation="`Toast.makeText()` creates a `Toast` but does *not* show it. You must call `show()` on the resulting object to actually make the `Toast` appear."
        errorLine1="                    Toast toast2 = Toast.makeText(context, &quot;Extract ReadConfigLog.txt from SD CARD&quot;, 5000);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\WIFIConfAccess.java"
            line="325"
            column="36"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>16dip&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\style.xml"
            line="6"
            column="39"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>16dip&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\style.xml"
            line="6"
            column="39"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>11dip&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\style.xml"
            line="11"
            column="39"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>11dip&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\style.xml"
            line="11"
            column="39"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>11dip&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\style.xml"
            line="16"
            column="39"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;sp&quot; instead of &quot;dp&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Looks for uses of `dp` instead of `sp` dimensions for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.

There *are* cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        &lt;item name=&quot;android:textSize&quot;>11dip&lt;/item>"
        errorLine2="                                      ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\style.xml"
            line="16"
            column="39"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="AbsoluteLayout is deprecated"
        category="Correctness"
        priority="2"
        summary="Looks for usages of deprecated layouts, attributes, and so on."
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="&lt;AbsoluteLayout android:id=&quot;@+id/AbsoluteLayout&quot;"
        errorLine2="^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\wait.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="Deprecated"
        severity="Warning"
        message="AbsoluteLayout is deprecated"
        category="Correctness"
        priority="2"
        summary="Looks for usages of deprecated layouts, attributes, and so on."
        explanation="Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You&apos;ve been warned."
        errorLine1="&lt;AbsoluteLayout android:id=&quot;@+id/AbsoluteLayout&quot;"
        errorLine2="^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\wait.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="MangledCRLF"
        severity="Error"
        message="Incorrect line ending: found carriage return (\r) without corresponding newline (\n)"
        category="Correctness"
        priority="2"
        summary="Checks that files with DOS line endings are consistent"
        explanation="On Windows, line endings are typically recorded as carriage return plus newline: \r\n.

This detector looks for invalid line endings with repeated carriage return characters (without newlines). Previous versions of the ADT plugin could accidentally introduce these into the file, and when editing the file, the editor could produce confusing visual artifacts."
        url="https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421"
        urls="https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421"
        errorLine1="              />"
        errorLine2="^"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="43"
            column="1"/>
    </issue>

    <issue
        id="MangledCRLF"
        severity="Error"
        message="Incorrect line ending: found carriage return (\r) without corresponding newline (\n)"
        category="Correctness"
        priority="2"
        summary="Checks that files with DOS line endings are consistent"
        explanation="On Windows, line endings are typically recorded as carriage return plus newline: \r\n.

This detector looks for invalid line endings with repeated carriage return characters (without newlines). Previous versions of the ADT plugin could accidentally introduce these into the file, and when editing the file, the editor could produce confusing visual artifacts."
        url="https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421"
        urls="https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421"
        errorLine1="              />"
        errorLine2="^"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="43"
            column="1"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set android:allowBackup to true or false (it&apos;s true by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="Ensure that allowBackup is explicitly set in the application&apos;s manifest"
        explanation="The allowBackup attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup

By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.

This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.

Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.

To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`"
        url="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        urls="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\AndroidManifest.xml"
            line="17"
            column="5"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set android:allowBackup to true or false (it&apos;s true by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="Ensure that allowBackup is explicitly set in the application&apos;s manifest"
        explanation="The allowBackup attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup

By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.

This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.

Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.

To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`"
        url="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        urls="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\AndroidManifest.xml"
            line="17"
            column="5"/>
    </issue>

    <issue
        id="MergeRootFrame"
        severity="Warning"
        message="This &lt;FrameLayout> can be replaced with a &lt;merge> tag"
        category="Performance"
        priority="4"
        summary="Checks whether a root &lt;FrameLayout> can be replaced with a `&lt;merge>` tag"
        explanation="If a `&lt;FrameLayout>` is the root of a layout and does not provide background or padding etc, it can often be replaced with a `&lt;merge>` tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the `&lt;merge>` tag works before proceeding."
        url="http://android-developers.blogspot.com/2009/03/android-layout-tricks-3-optimize-by.html"
        urls="http://android-developers.blogspot.com/2009/03/android-layout-tricks-3-optimize-by.html"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\activity_main.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="MergeRootFrame"
        severity="Warning"
        message="This &lt;FrameLayout> can be replaced with a &lt;merge> tag"
        category="Performance"
        priority="4"
        summary="Checks whether a root &lt;FrameLayout> can be replaced with a `&lt;merge>` tag"
        explanation="If a `&lt;FrameLayout>` is the root of a layout and does not provide background or padding etc, it can often be replaced with a `&lt;merge>` tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the `&lt;merge>` tag works before proceeding."
        url="http://android-developers.blogspot.com/2009/03/android-layout-tricks-3-optimize-by.html"
        urls="http://android-developers.blogspot.com/2009/03/android-layout-tricks-3-optimize-by.html"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\activity_main.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use new SparseArray&lt;NetworkListFragment>(...) instead for better performance"
        category="Performance"
        priority="4"
        summary="Looks for opportunities to replace HashMaps with the more efficient SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.

This is *particularly* useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.

If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1=" private HashMap&lt;Integer, NetworkListFragment> fragments =new HashMap&lt;Integer,NetworkListFragment>();"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\MainActivity.java"
            line="27"
            column="59"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use new SparseArray&lt;NetworkListFragment>(...) instead for better performance"
        category="Performance"
        priority="4"
        summary="Looks for opportunities to replace HashMaps with the more efficient SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.

This is *particularly* useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.

If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1=" private HashMap&lt;Integer, NetworkListFragment> fragments =new HashMap&lt;Integer,NetworkListFragment>();"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\java\com\beboo\wifibackupandrestore\MainActivity.java"
            line="27"
            column="59"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.activity_main appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\activity_main.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.activity_main appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\activity_main.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.list_fragment appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\list_fragment.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.list_fragment appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\list_fragment.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.menu appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\menu.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.menu appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\menu.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.menu_main_activty appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\menu_main_activty.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.menu_main_activty appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\menu_main_activty.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.backup_success appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;backup_success&quot;>backup succeeded&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="5"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.backup_success appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;backup_success&quot;>backup succeeded&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="5"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.restore_success appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;restore_success&quot;>restore succeeded&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="7"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.restore_success appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;restore_success&quot;>restore succeeded&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="7"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.restore_failure appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;restore_failure&quot;>restore failed&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="8"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.restore_failure appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;restore_failure&quot;>restore failed&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="8"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.confirm_restore appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;confirm_restore&quot;>Confirm restoration of networks :&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="15"
            column="10"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="15"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.confirm_restore appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1=" &lt;string name=&quot;confirm_restore&quot;>Confirm restoration of networks :&lt;/string>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values\strings.xml"
            line="15"
            column="10"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\values-en\strings.xml"
            line="15"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.viewdialog appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.viewdialog appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.wait appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\wait.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.wait appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\wait.xml"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is possibly useless"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="49"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its LinearLayout parent is possibly useless"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="49"
            column="5"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-hdpi: ic_menu_refresh.png (found in drawable-mdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-hdpi: ic_menu_refresh.png (found in drawable-mdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-mdpi: ic_menu_copy_holo_dark.png, ic_menu_copy_holo_light.png"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-mdpi: ic_menu_copy_holo_dark.png, ic_menu_copy_holo_light.png"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-xhdpi: ic_menu_refresh.png (found in drawable-mdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\drawable-xhdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in drawable-xhdpi: ic_menu_refresh.png (found in drawable-mdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Ensures that icons provide custom versions for all supported densities"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\drawable-xhdpi"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="3"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="3"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="14"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="14"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="19"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1="    &lt;item"
        errorLine2="    ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="19"
            column="5"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1=" &lt;item "
        errorLine2=" ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="3"
            column="2"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1=" &lt;item "
        errorLine2=" ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="3"
            column="2"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1=" &lt;item"
        errorLine2=" ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="8"
            column="2"/>
    </issue>

    <issue
        id="MenuTitle"
        severity="Warning"
        message="Menu items should specify a title"
        category="Usability"
        priority="5"
        summary="Ensures that all menu items supply a title"
        explanation="From the action bar documentation:
&quot;It&apos;s important that you always define android:title for each menu item — even if you don&apos;t declare that the title appear with the action item — for three reasons:

* If there&apos;s not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.
* Screen readers for sight-impaired users read the menu item&apos;s title.
* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item&apos;s title.
The android:icon is always optional, but recommended."
        url="http://developer.android.com/guide/topics/ui/actionbar.html"
        urls="http://developer.android.com/guide/topics/ui/actionbar.html"
        errorLine1=" &lt;item"
        errorLine2=" ^">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="8"
            column="2"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;ifRoom&quot; instead of &quot;always&quot;"
        category="Usability"
        priority="3"
        summary="Checks for uses of `showAsAction=&quot;always&quot;` and suggests `showAsAction=&quot;ifRoom&quot;` instead"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="            android:showAsAction=&quot;always&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="6"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="11"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="17"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;ifRoom&quot; instead of &quot;always&quot;"
        category="Usability"
        priority="3"
        summary="Checks for uses of `showAsAction=&quot;always&quot;` and suggests `showAsAction=&quot;ifRoom&quot;` instead"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="            android:showAsAction=&quot;always&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="6"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="11"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="17"
            column="13"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_backuped.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;ifRoom&quot; instead of &quot;always&quot;"
        category="Usability"
        priority="3"
        summary="Checks for uses of `showAsAction=&quot;always&quot;` and suggests `showAsAction=&quot;ifRoom&quot;` instead"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="         android:showAsAction=&quot;always&quot;>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="6"
            column="10"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="11"
            column="8"/>
    </issue>

    <issue
        id="AlwaysShowAction"
        severity="Warning"
        message="Prefer &quot;ifRoom&quot; instead of &quot;always&quot;"
        category="Usability"
        priority="3"
        summary="Checks for uses of `showAsAction=&quot;always&quot;` and suggests `showAsAction=&quot;ifRoom&quot;` instead"
        explanation="Using `showAsAction=&quot;always&quot;` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.

If `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.

This check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`."
        url="http://developer.android.com/design/patterns/actionbar.html"
        urls="http://developer.android.com/design/patterns/actionbar.html"
        errorLine1="         android:showAsAction=&quot;always&quot;>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="6"
            column="10"/>
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\menu\contextmode_configured.xml"
            line="11"
            column="8"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Maison&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Maison&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Maison&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Maison&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="22"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;217946D9293E574379A6265AAA&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;217946D9293E574379A6265AAA&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;217946D9293E574379A6265AAA&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;217946D9293E574379A6265AAA&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;WPA_PSK&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;WPA_PSK&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;WPA_PSK&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;WPA_PSK&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;configured&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;configured&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;configured&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;configured&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\onelinelist2.xml"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;quelque part&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;quelque part&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;quelque part&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;quelque part&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Livebox-F42D&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Livebox-F42D&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Livebox-F42D&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Livebox-F42D&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;WPA-PSK&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="          android:text=&quot;WPA-PSK&quot;"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="30"
            column="11"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;WPA-PSK&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="          android:text=&quot;WPA-PSK&quot;"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="30"
            column="11"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;1234123412341234&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="          android:text=&quot;1234123412341234&quot;"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="38"
            column="11"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;1234123412341234&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Eclipse there is a quickfix to automatically extract this hardcoded string into a resource lookup."
        errorLine1="          android:text=&quot;1234123412341234&quot;"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Users\olivier\androidStudioProjects2\WBR2\app\src\main\res\layout\viewdialog.xml"
            line="38"
            column="11"/>
    </issue>

</issues>
